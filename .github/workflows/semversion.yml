name: "Semantic Versioning"

on:
  workflow_call:
    inputs:
      tag_prefix:
        required: false
        type: string
        default: "v"
        description: "tag name for the application or module"
      module_path:
        required: false
        type: string
        default: "."
        description: "path to the application or module directory"
      tag_release:
        required: false
        type: boolean
        default: false
        description: "release a tag (default: false)"

    # output version to be used in the caller workflow
    outputs:
      version:
        description: "tag version generated"
        value: ${{ jobs.versioning_generator.outputs.version }}
      prev_version:
        description: "previous tag version"
        value: ${{ jobs.versioning_generator.outputs.prev_version }}
      sem_version:
        description: "semantic version"
        value: ${{ jobs.versioning_generator.outputs.semantic_version }}
      current_commit:
        description: "new generated hash"
        value: ${{ jobs.versioning_generator.outputs.new_commit_hash }}

    secrets:
      GIT_TOKEN:
        required: true

jobs:
  # versioning system generator
  versioning_generator:
    runs-on: ubuntu-22.04
    name: SemVer Generator

    outputs:
      version: ${{ steps.print_version.outputs.versiontag }}
      prev_version: ${{ steps.print_version.outputs.prevsemver }}
      semantic_version: ${{ steps.print_version.outputs.semver }}
      new_commit_hash: ${{ steps.print_version.outputs.commithash }}

    steps:
      # clones current repository
      - name: Checkout current repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch the whole repo history

      # calculate version tag based on codebase commit types
      - uses: paulhatch/semantic-version@v5.0.2
        id: generated_version
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat"
          version_format: "v${major}.${minor}.${patch}-alpha.${increment}"
          search_commit_body: true

      # print new tag version
      - name: Echo tag version
        id: print_version
        run: |
          echo "tag release is: ${{ inputs.tag_release }}"
          echo "Tag: ${{ steps.generated_version.outputs.version_tag }}"
          echo "Semver: ${{ steps.generated_version.outputs.version }}"
          echo "Prev tag: ${{ steps.generated_version.outputs.previous_version }}"
          echo "Prev commit: ${{ steps.generated_version.outputs.previous_commit }}"
          echo "Curr commit: ${{ steps.generated_version.outputs.current_commit }}"
          echo "versiontag=${{ steps.generated_version.outputs.version_tag }}" >> $GITHUB_OUTPUT
          echo "semver=${{ steps.generated_version.outputs.major }}.${{ steps.generated_version.outputs.minor }}.${{ steps.generated_version.outputs.patch }}" >> $GITHUB_OUTPUT
          echo "prevsemver=${{ steps.generated_version.outputs.previous_version }}" >> $GITHUB_OUTPUT
          echo "commithash=${{ steps.generated_version.outputs.currentCommit }}" >> $GITHUB_OUTPUT
      # release tag version on repository
      - name: Tag Release
        if: ${{ inputs.tag_release }}
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.generated_version.outputs.version_tag }}
          message: "Releasing version ${{ steps.generated_version.outputs.version_tag }}"
          github_token: ${{ secrets.GIT_TOKEN }}